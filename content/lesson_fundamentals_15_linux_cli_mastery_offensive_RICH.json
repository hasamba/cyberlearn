{
  "lesson_id": "0f01c962-90de-4f51-9034-286572207aa7",
  "domain": "fundamentals",
  "title": "Linux Command-Line Mastery for Offensive Ops",
  "subtitle": "Accelerating shell fluency when every minute counts",
  "difficulty": 2,
  "estimated_time": 55,
  "order_index": 15,
  "prerequisites": [
    "Kali Environment Optimisation"
  ],
  "concepts": [
    "Pipelines for recon data reduction",
    "Chaining find, grep, awk, and sed effectively",
    "tmux layouts for multitasking and note capture",
    "File transfer helpers including scp, rsync, and wget",
    "Process monitoring and job control",
    "Quick payload editing with micro or vim",
    "Permission and capability checks",
    "State-change rituals before complex shell work"
  ],
  "learning_objectives": [
    "Design tmux layouts aligned to reconnaissance, exploitation, and note taking",
    "Chain GNU utilities to triage scan output rapidly",
    "Execute stealthy file transfers without leaving artefacts behind",
    "Diagnose process issues during exploit development sessions",
    "Apply FASTER cues to stay calm under shell pressure"
  ],
  "content_blocks": [
    {
      "block_id": "d3704265-4f1d-4044-b1a1-0bb49d705f02",
      "type": "mindset_coach",
      "title": "FASTER Focus",
      "content": {
        "text": "FASTER your linux shell mastery practice. Forget stale habits, activate by centring your breathing before the terminal opens, visualise a clean tmux layout, teach forward with a note in your journal, enter by starting the tmux template, and review when a ten-minute warning chime fires near the end of the session."
      },
      "simplified_explanation": "Prime your mind before heavy command-line work.",
      "memory_aids": [
        "Forget → Active → State → Teach → Enter → Review"
      ],
      "real_world_connection": "Operators who pre-plan their state report fewer mistakes on live targets.",
      "reflection_prompt": "What personal cue reminds you to reset before touching the keyboard?",
      "is_interactive": false,
      "xp_reward": 0
    },
    {
      "block_id": "7a5be8f0-7ca8-4fb5-8ba0-1ac0799c0f63",
      "type": "explanation",
      "title": "Key Moves",
      "content": {
        "text": "## Execution Checklist\n- **Pre-build tmux windows for recon, exploitation, and notes**\n- **Create alias-driven pipelines for parsing results**\n- **Use job control to manage background shells cleanly**\n\nUse this list as your quick brief before diving into a new host."
      },
      "simplified_explanation": "Glance at this before running major commands.",
      "memory_aids": [
        "Windows → Pipelines → Jobs"
      ],
      "real_world_connection": "Pen testers often share tmux templates to minimise setup time on live gigs.",
      "reflection_prompt": "Which command chain saves you the most time today?",
      "is_interactive": false,
      "xp_reward": 10
    },
    {
      "block_id": "f6435431-e62c-4f1e-84dd-c3ae44b0342d",
      "type": "video",
      "title": "Shell Speed Drills for Offensive Operators",
      "content": {
        "resources": "Watch the walkthrough to anchor the workflow.\n\n**Video**: [Shell Speed Drills for Offensive Operators](https://videos.cyberlearn.local/fundamentals/linux_cli_mastery.mp4) — 13 minutes\n\nPause at 05:45 and predict the next pipeline before pressing play."
      },
      "simplified_explanation": "Let the video demonstrate how to build rhythm before you try it solo.",
      "memory_aids": [
        "Pause → Predict → Play"
      ],
      "real_world_connection": "Elite red teams rehearse command sequences on video before client engagements.",
      "reflection_prompt": "Which drill will you incorporate into your daily warm-up?",
      "is_interactive": false,
      "xp_reward": 10
    },
    {
      "block_id": "80a93ccb-bd6e-4b33-9b37-fd53d65128bd",
      "type": "simulation",
      "title": "Scenario Lab",
      "content": {
        "text": "### Lab Goal: Reduce recon data and orchestrate shells with tmux\n1. Launch tmux with panes dedicated to recon, loot, and notes.\n2. Process a sample nmap.gnmap file to extract high-value ports and export sorted results.\n3. Transfer a payload between two lab VMs using scp, python -m http.server, and wget.\n4. Document the workflow in your engagement notebook using FASTER reflections.\n\nCapture artefacts as you go so the reporting section writes itself."
      },
      "simplified_explanation": "Run the drills, collect evidence, and refine your notes.",
      "memory_aids": [
        "Plan → Execute → Capture"
      ],
      "real_world_connection": "Real-world operators maintain tmux presets and pipeline snippets in shared repos.",
      "reflection_prompt": "Where did the workflow slow down, and what will you tweak?",
      "is_interactive": true,
      "xp_reward": 25
    },
    {
      "block_id": "1c0496e4-399f-44c5-a7df-c5f875cfc0e3",
      "type": "reflection",
      "title": "Teach-Back Debrief",
      "content": {
        "text": "Teach it back: record a two-minute voice note explaining how you tightened your linux shell mastery.\nAnswer the prompts:\n- What signal told you the approach was working?\n- How will you elevate your state faster the next time a shell goes sideways?\n- Who will you debrief using the orchestra conductor metaphor?"
      },
      "simplified_explanation": "Teaching the flows cements muscle memory for high-pressure sessions.",
      "memory_aids": [
        "Signal → State → Story"
      ],
      "real_world_connection": "Top teams build culture by narrating their playbooks back to peers every week.",
      "reflection_prompt": "Which teammate or study buddy needs to hear this debrief?",
      "is_interactive": false,
      "xp_reward": 5
    }
  ],
  "pre_assessment": null,
  "post_assessment": [
    {
      "question_id": "q1",
      "type": "multiple_choice",
      "question": "Which FASTER element keeps outdated command habits from creeping into your linux shell sessions?",
      "options": [
        "Active",
        "Teach",
        "Forget",
        "Review"
      ],
      "correct_answer": 2,
      "explanation": "Resetting with Forget clears muscle memory so you can approach the terminal with intent.",
      "difficulty": 3,
      "memory_aid": "Reset before you rush.",
      "points": 10
    },
    {
      "question_id": "q2",
      "type": "multiple_choice",
      "question": "What is the primary outcome of this lesson's lab?",
      "options": [
        "Rely solely on GUI tools for recon parsing",
        "Reduce recon data and orchestrate shells with tmux",
        "Leave sessions running without capturing notes",
        "Documenting unrelated vulnerabilities"
      ],
      "correct_answer": 1,
      "explanation": "The lab sequence reinforces tmux orchestration and data reduction skills.",
      "difficulty": 3,
      "memory_aid": "Know the win condition before you start.",
      "points": 10
    },
    {
      "question_id": "q3",
      "type": "multiple_choice",
      "question": "Which approach best supports parsing recon data efficiently?",
      "options": [
        "cat file | more",
        "awk and sort pipelines tailored to the service list",
        "Copy-pasting results manually into spreadsheets",
        "Rerunning scans every time you need a detail"
      ],
      "correct_answer": 1,
      "explanation": "Purpose-built pipelines minimise rework and highlight high-value targets faster.",
      "difficulty": 3,
      "memory_aid": "Map each phase to a go-to tool and a backup.",
      "points": 10
    }
  ],
  "mastery_threshold": 80,
  "jim_kwik_principles": [
    "active_learning",
    "minimum_effective_dose",
    "teach_like_im_10",
    "memory_hooks",
    "meta_learning",
    "connect_to_what_i_know",
    "reframe_limiting_beliefs",
    "gamify_it",
    "learning_sprint",
    "multiple_memory_pathways"
  ],
  "base_xp_reward": 150,
  "badge_unlock": null,
  "is_core_concept": false,
  "created_at": "2025-10-28T19:20:00",
  "updated_at": "2025-10-28T19:20:00",
  "author": "CyberLearn Offensive Curriculum Team",
  "version": "1.0"
}

