{
  "lesson_id": "d58e6adb-db8f-4104-805a-fba704cf579d",
  "domain": "blue_team",
  "title": "Hayabusa and Sigma Rule Detection",
  "subtitle": "Section 2: Scanning and Enumeration Focus on Windows Event Log analysis with Hayabusa",
  "difficulty": 2,
  "estimated_time": 49,
  "order_index": 58,
  "prerequisites": [
    "e584bc1f-8fe5-4557-b797-6f0791442564",
    "7338fa1b-16f5-4d71-8eac-095942e96b35"
  ],
  "concepts": [
    "Windows Event Log analysis with Hayabusa",
    "Sigma rule development",
    "threat hunting with Sigma",
    "false positive differentiation",
    "remote host assessment",
    "fast triage techniques"
  ],
  "learning_objectives": [
    "Summarize why Hayabusa and Sigma Rule Detection matters for detection engineering and SOC operations and how it guides decision-making.",
    "Apply Windows Event Log analysis with Hayabusa and Sigma rule development to a scripted incident and document the workflow.",
    "Evaluate telemetry, communication, and automation opportunities discovered while rehearsing Hayabusa and Sigma Rule Detection.",
    "Coach peers through the lesson structure and record measurable improvements across the team."
  ],
  "post_assessment": [
    {
      "question": "How does Windows Event Log analysis with Hayabusa strengthen the Hayabusa and Sigma Rule Detection workflow?",
      "options": [
        "It distracts SOC engineers from detection engineering and SOC operations priorities by focusing on unrelated administrative work.",
        "It guides SOC engineers to gather evidence, compare telemetry, and communicate findings tied to detection engineering and SOC operations.",
        "It encourages teams to skip documentation and rely on ad-hoc conversations during crises.",
        "It replaces the need for collaboration with external partners and legal advisors."
      ],
      "correct_answer": 1,
      "difficulty": 2,
      "type": "multiple_choice",
      "question_id": "efef10e6-3d5b-4ba6-9101-1f77ea4fb6c6",
      "explanation": "Windows Event Log analysis with Hayabusa provides structure for capturing observations, testing hypotheses, and looping in stakeholders so the Hayabusa and Sigma Rule Detection process consistently improves."
    },
    {
      "question": "How does Sigma rule development strengthen the Hayabusa and Sigma Rule Detection workflow?",
      "options": [
        "It distracts SOC engineers from detection engineering and SOC operations priorities by focusing on unrelated administrative work.",
        "It guides SOC engineers to gather evidence, compare telemetry, and communicate findings tied to detection engineering and SOC operations.",
        "It encourages teams to skip documentation and rely on ad-hoc conversations during crises.",
        "It replaces the need for collaboration with external partners and legal advisors."
      ],
      "correct_answer": 1,
      "difficulty": 2,
      "type": "multiple_choice",
      "question_id": "0ee900c7-567e-4fb7-9b06-3c462084fc50",
      "explanation": "Sigma rule development provides structure for capturing observations, testing hypotheses, and looping in stakeholders so the Hayabusa and Sigma Rule Detection process consistently improves."
    },
    {
      "question": "How does threat hunting with Sigma strengthen the Hayabusa and Sigma Rule Detection workflow?",
      "options": [
        "It distracts SOC engineers from detection engineering and SOC operations priorities by focusing on unrelated administrative work.",
        "It guides SOC engineers to gather evidence, compare telemetry, and communicate findings tied to detection engineering and SOC operations.",
        "It encourages teams to skip documentation and rely on ad-hoc conversations during crises.",
        "It replaces the need for collaboration with external partners and legal advisors."
      ],
      "correct_answer": 1,
      "difficulty": 2,
      "type": "multiple_choice",
      "question_id": "0bd36b51-61dd-43c6-a27b-23c7f3764a07",
      "explanation": "threat hunting with Sigma provides structure for capturing observations, testing hypotheses, and looping in stakeholders so the Hayabusa and Sigma Rule Detection process consistently improves."
    },
    {
      "question": "How does false positive differentiation strengthen the Hayabusa and Sigma Rule Detection workflow?",
      "options": [
        "It distracts SOC engineers from detection engineering and SOC operations priorities by focusing on unrelated administrative work.",
        "It guides SOC engineers to gather evidence, compare telemetry, and communicate findings tied to detection engineering and SOC operations.",
        "It encourages teams to skip documentation and rely on ad-hoc conversations during crises.",
        "It replaces the need for collaboration with external partners and legal advisors."
      ],
      "correct_answer": 1,
      "difficulty": 2,
      "type": "multiple_choice",
      "question_id": "a6f6286c-4b36-4ca9-9b90-736cf4236cdf",
      "explanation": "false positive differentiation provides structure for capturing observations, testing hypotheses, and looping in stakeholders so the Hayabusa and Sigma Rule Detection process consistently improves."
    }
  ],
  "jim_kwik_principles": [
    "teach_like_im_10",
    "memory_hooks",
    "connect_to_what_i_know",
    "active_learning",
    "meta_learning",
    "minimum_effective_dose",
    "reframe_limiting_beliefs",
    "gamify_it",
    "learning_sprint",
    "multiple_memory_pathways"
  ],
  "content_blocks": [
    {
      "type": "explanation",
      "content": {
        "text": "### Section 2: Scanning and Enumeration \u2013 Hayabusa and Sigma Rule Detection\n\nSoc engineers rely on **Hayabusa and Sigma Rule Detection** to express why this portion of the curriculum matters. The lesson connects strategy and day-to-day execution so the team can describe what good looks like when safeguarding detection engineering and SOC operations.\n\nRemember from the planning notes: Advanced Windows detection\n\nWindows Event Log analysis with Hayabusa keeps SOC engineers grounded in repeatable practice. Within detection engineering and SOC operations, this element clarifies how to brief peers, review telemetry, and translate the section 2: scanning and enumeration commitments into measurable action. Kickoff workshops should document baseline data, escalation triggers, and links to automation backlogs so the entire unit understands how windows event log analysis with hayabusa supports resilience and recovery.\n\nSigma rule development keeps SOC engineers grounded in repeatable practice. Within detection engineering and SOC operations, this element clarifies how to brief peers, review telemetry, and translate the section 2: scanning and enumeration commitments into measurable action. Kickoff workshops should document baseline data, escalation triggers, and links to automation backlogs so the entire unit understands how sigma rule development supports resilience and recovery.\n\nthreat hunting with Sigma keeps SOC engineers grounded in repeatable practice. Within detection engineering and SOC operations, this element clarifies how to brief peers, review telemetry, and translate the section 2: scanning and enumeration commitments into measurable action. Kickoff workshops should document baseline data, escalation triggers, and links to automation backlogs so the entire unit understands how threat hunting with sigma supports resilience and recovery.\n\nClose the section by capturing success metrics, owner assignments, and retrospectives that prove the hayabusa and sigma rule detection habits are embedded across the program."
      }
    },
    {
      "type": "video",
      "content": {
        "text": "https://www.youtube.com/watch?v=9Jr8Bp6oqdQ \u2014 SANS blue team summit session shows how threat intelligence platforms operationalize detections, mirroring the workflows in this lesson."
      }
    },
    {
      "type": "explanation",
      "content": {
        "text": "### Section 2: Scanning and Enumeration \u2013 Hayabusa and Sigma Rule Detection\n\nSoc engineers rely on **Hayabusa and Sigma Rule Detection** to express why this portion of the curriculum matters. The lesson connects strategy and day-to-day execution so the team can describe what good looks like when safeguarding detection engineering and SOC operations.\n\nRemember from the planning notes: Advanced Windows detection\n\nfalse positive differentiation keeps SOC engineers grounded in repeatable practice. Within detection engineering and SOC operations, this element clarifies how to brief peers, review telemetry, and translate the section 2: scanning and enumeration commitments into measurable action. Deep-dive workshops should document baseline data, escalation triggers, and links to automation backlogs so the entire unit understands how false positive differentiation supports resilience and recovery.\n\nremote host assessment keeps SOC engineers grounded in repeatable practice. Within detection engineering and SOC operations, this element clarifies how to brief peers, review telemetry, and translate the section 2: scanning and enumeration commitments into measurable action. Deep-dive workshops should document baseline data, escalation triggers, and links to automation backlogs so the entire unit understands how remote host assessment supports resilience and recovery.\n\nfast triage techniques keeps SOC engineers grounded in repeatable practice. Within detection engineering and SOC operations, this element clarifies how to brief peers, review telemetry, and translate the section 2: scanning and enumeration commitments into measurable action. Deep-dive workshops should document baseline data, escalation triggers, and links to automation backlogs so the entire unit understands how fast triage techniques supports resilience and recovery.\n\nClose the section by capturing success metrics, owner assignments, and retrospectives that prove the hayabusa and sigma rule detection habits are embedded across the program."
      }
    },
    {
      "type": "code_exercise",
      "content": {
        "text": "## Hands-on Simulation for Hayabusa and Sigma Rule Detection\n\nSet up a sandbox aligned with section 2: scanning and enumeration commitments. The goal is to narrate every investigative move so SOC engineers can replay the workflow with new data sets.\n\n1. Draft a playbook segment around **Windows Event Log analysis with Hayabusa**. Identify required tooling, the evidence collected, and the triage decisions the team must make. Capture command output, dashboards, and analyst notes.\n\n2. Draft a playbook segment around **Sigma rule development**. Identify required tooling, the evidence collected, and the triage decisions the team must make. Capture command output, dashboards, and analyst notes.\n\n3. Draft a playbook segment around **threat hunting with Sigma**. Identify required tooling, the evidence collected, and the triage decisions the team must make. Capture command output, dashboards, and analyst notes.\n\n4. Draft a playbook segment around **false positive differentiation**. Identify required tooling, the evidence collected, and the triage decisions the team must make. Capture command output, dashboards, and analyst notes.\n\n5. Draft a playbook segment around **remote host assessment**. Identify required tooling, the evidence collected, and the triage decisions the team must make. Capture command output, dashboards, and analyst notes.\n\n6. Draft a playbook segment around **fast triage techniques**. Identify required tooling, the evidence collected, and the triage decisions the team must make. Capture command output, dashboards, and analyst notes.\n\nAfter the walkthrough, schedule a peer review. Each analyst explains what worked, what required escalation, and how to automate repetitive steps without losing investigative rigor.\n\nFinish by updating the runbook, linking recorded sessions, and tagging knowledge base articles so future rotations learn from the exercise."
      }
    },
    {
      "type": "real_world",
      "content": {
        "text": "## Case Study: Applying Hayabusa and Sigma Rule Detection\n\nA regional team experienced a high-pressure incident that exposed gaps in detection engineering and SOC operations. Soc engineers regrouped and replayed the timeline using the lesson structure from Hayabusa and Sigma Rule Detection.\n\nThey cataloged the signals they missed, the collaboration friction they encountered, and the stakeholders who needed clearer communication. By aligning remediation tasks to the lesson structure, they closed visibility gaps and launched new detection backlogs.\n\nDuring the postmortem, the team recorded how executive updates, compliance obligations, and vendor coordination all tied back to the lesson pillars. This ensured future incidents would follow a confident, rehearsed pathway to containment.\n\nPlanning reminder: Advanced Windows detection"
      }
    },
    {
      "type": "memory_aid",
      "content": {
        "text": "## Memory Architectures\n\n### Mnemonic: HASRD\n\nAssociate the acronym with the mission of this lesson. Visualize a war room where each station is labeled with these initials, reminding the crew how to defend detection engineering and SOC operations under stress.\n\n- H \u2013 Windows Event Log analysis with Hayabusa\n- A \u2013 Sigma rule development\n- S \u2013 threat hunting with Sigma\n- R \u2013 false positive differentiation\n- D \u2013 remote host assessment\n\n### Mnemonic: HASRD\n\nUse this alternate mnemonic to trigger rapid debriefs. Picture sticky notes, dashboards, and alerts all echoing these letters so the practice becomes muscle memory.\n\n- H \u2013 Lessons Learned\n- A \u2013 Resilience Testing\n- S \u2013 Automation Backlog\n- R \u2013 Telemetry Mapping\n- D \u2013 Stakeholder Briefing\n\nTurn both memory tools into cue cards, whiteboard sketches, and spaced-repetition prompts so the team revisits them weekly."
      }
    },
    {
      "type": "quiz",
      "content": {
        "text": "## Quick Knowledge Check: Hayabusa and Sigma Rule Detection\n\nDiscuss these prompts with a teammate before attempting the formal post-assessment. Emphasize storytelling and decision rationale.\n\n- How does **Windows Event Log analysis with Hayabusa** influence the triage path, and which warning signs should SOC engineers flag immediately?\n\n- How does **Sigma rule development** influence the triage path, and which warning signs should SOC engineers flag immediately?\n\n- How does **threat hunting with Sigma** influence the triage path, and which warning signs should SOC engineers flag immediately?\n\nCapture the answers in your runbook and update escalation thresholds so the lesson becomes part of daily stand-ups."
      }
    },
    {
      "type": "reflection",
      "content": {
        "text": "## Reflection Journal\n\n- When did you last witness a breakdown in detection engineering and SOC operations, and how would the Hayabusa and Sigma Rule Detection workflow change the outcome?\n- Which allies outside your immediate team should be briefed on this lesson so SOC engineers have faster support?\n- What metric will you watch over the next two sprints to prove the lesson is embedded?"
      }
    },
    {
      "type": "mindset_coach",
      "content": {
        "text": "## Mindset Coach\n\nThis is an intermediate journey. Celebrate each iteration where SOC engineers narrate what they learned, how they collaborated, and which safeguards they reinforced.\n\nTreat mistakes as signal. Document them, share the story, and adjust the playbook so confidence keeps growing while working through Hayabusa and Sigma Rule Detection.\n\nEnd every session by identifying one action you can automate, one teammate you can mentor, and one stakeholder update you can improve."
      }
    }
  ],
  "tags": [
    "Course: SANS-SEC504"
  ]
}
