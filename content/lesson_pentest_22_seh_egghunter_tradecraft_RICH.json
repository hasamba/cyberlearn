{
  "lesson_id": "f10363f6-d7e1-4bc9-be23-40db181afcc6",
  "domain": "pentest",
  "title": "SEH & Egghunter Tradecraft",
  "subtitle": "Escalating reliability with structured exception handling",
  "difficulty": 4,
  "estimated_time": 60,
  "order_index": 22,
  "prerequisites": [
    "Windows Stack Exploit Workflow"
  ],
  "concepts": [
    "SEH internals and handler chaining",
    "SafeSEH / DEP considerations",
    "Egghunter payload design and testing",
    "Short jump and alignment tricks",
    "FASTER routines for complex exploit chains",
    "Documentation of multi-stage exploits"
  ],
  "learning_objectives": [
    "Craft SEH overwrites that survive SafeSEH and DEP checks",
    "Build and test egghunters that locate staged payloads",
    "Chain short jumps and alignments for constrained buffers",
    "Capture precise timing and memory notes for multi-stage exploits",
    "Use FASTER cues to stay organised during layered exploitation"
  ],
  "content_blocks": [
    {
      "block_id": "ed82ae3a-fe7e-4c64-b43e-028b7a354c31",
      "type": "mindset_coach",
      "title": "FASTER Focus",
      "content": {
        "text": "FASTER your seh and egghunters practice. Forget stale habits, activate by grounding yourself, visualise a flowchart linking SEH frames and egghunter path, teach forward with a one-line insight, enter by set breakpoints on the SEH chain and load the exploit, and review when timer labelled 'SEH recap' towards session end fires."
      },
      "simplified_explanation": "Reset, energise, and script your next move before diving in.",
      "memory_aids": [
        "Forget \u2192 Active \u2192 State \u2192 Teach \u2192 Enter \u2192 Review"
      ],
      "real_world_connection": "Expert operators craft mindset rituals that keep exploits on track.",
      "reflection_prompt": "Which FASTER element will have the biggest impact on today's session?",
      "is_interactive": false,
      "xp_reward": 0
    },
    {
      "block_id": "dc7027db-4455-4c91-8d3a-82129e647dd9",
      "type": "explanation",
      "title": "Key Moves",
      "content": {
        "text": "## Execution Checklist\n- **Map the SEH chain before overwriting handlers**\n- **Test egghunters in isolation before integrating**\n- **Log every offset, pointer, and jump length**\n\nKeep this checklist visible as you work."
      },
      "simplified_explanation": "Glance at this before every major step.",
      "memory_aids": [
        "Checklist before command line"
      ],
      "real_world_connection": "Consultancies insist on written playbooks for exploit work.",
      "reflection_prompt": "Which checklist item needs sharpening?",
      "is_interactive": false,
      "xp_reward": 10
    },
    {
      "block_id": "62d22888-4d80-402b-a3a9-698c80bdbfe5",
      "type": "video",
      "title": "SEH & Egghunter Deep Dive",
      "content": {
        "resources": "Watch the walkthrough to anchor the workflow.\n\n**Video**: [SEH & Egghunter Deep Dive](https://videos.cyberlearn.local/pentest/seh_egghunter_tradecraft.mp4) \u2014 13 minutes\n\nPause at 06:55 and predict the next move before resuming."
      },
      "simplified_explanation": "Use the video to visualise success before you execute.",
      "memory_aids": [
        "Pause \u2192 Predict \u2192 Play"
      ],
      "real_world_connection": "Teams capture video briefings so every operator copies proven flows.",
      "reflection_prompt": "What insight did you record while pausing the video?",
      "is_interactive": false,
      "xp_reward": 10
    },
    {
      "block_id": "b7d8155a-4108-483a-8a71-7828ba95a6bd",
      "type": "simulation",
      "title": "Scenario Lab",
      "content": {
        "text": "### Lab Goal: Deliver shellcode via SEH overwrite and egghunter in a constrained buffer\n1. Identify SEH overwrite opportunity and record handler addresses\n2. Construct a short jump + pop-pop-ret sequence to regain control\n3. Embed an egghunter and stage shellcode elsewhere in memory\n4. Validate the chain delivers code execution and document the sequence\n\nCapture artefacts as you go so the reporting section writes itself."
      },
      "simplified_explanation": "Execute the plan and gather proof.",
      "memory_aids": [
        "Plan \u2192 Execute \u2192 Capture"
      ],
      "real_world_connection": "Clients expect reproducible artefacts for every exploit run.",
      "reflection_prompt": "Which step revealed a blocker you must research?",
      "is_interactive": true,
      "xp_reward": 25
    },
    {
      "block_id": "f07307ab-e7f2-4025-9d5d-55d3a99a95d8",
      "type": "reflection",
      "title": "Teach-Back Debrief",
      "content": {
        "text": "Teach it back: record a two-minute voice note explaining how you approached seh and egghunters.\nAnswer the prompts:\n- What signal told you the approach was working?\n- How will you elevate your state faster next time?\n- Who will you debrief using the domino chain analogy?"
      },
      "simplified_explanation": "Explaining it forward locks in the learning.",
      "memory_aids": [
        "Signal \u2192 State \u2192 Story"
      ],
      "real_world_connection": "Teams close exploit sprints with teach-backs to capture tacit knowledge.",
      "reflection_prompt": "Who needs this debrief in their inbox?",
      "is_interactive": false,
      "xp_reward": 5
    }
  ],
  "pre_assessment": null,
  "post_assessment": [
    {
      "question_id": "q1",
      "type": "multiple_choice",
      "question": "Which FASTER element keeps you from carrying stale habits into seh and egghunters?",
      "options": [
        "Active",
        "Teach",
        "Forget",
        "Review"
      ],
      "correct_answer": 2,
      "explanation": "Starting with Forget clears assumptions so you approach the problem fresh.",
      "difficulty": 4,
      "memory_aid": "Reset before you rush.",
      "points": 10
    },
    {
      "question_id": "q2",
      "type": "multiple_choice",
      "question": "What is the primary outcome of this lesson's lab?",
      "options": [
        "Skip egghunter testing and hope the shellcode is found",
        "Deliver shellcode via SEH overwrite and egghunter in a constrained buffer",
        "Ignore SafeSEH flags when selecting pop-pop-ret",
        "Documenting unrelated vulnerabilities"
      ],
      "correct_answer": 1,
      "explanation": "Every step in the lab guides you toward: Deliver shellcode via SEH overwrite and egghunter in a constrained buffer.",
      "difficulty": 4,
      "memory_aid": "Know the win condition before you start.",
      "points": 10
    },
    {
      "question_id": "q3",
      "type": "multiple_choice",
      "question": "Which approach best supports validating pop-pop-ret gadgets?",
      "options": [
        "Select gadgets from any module regardless of protections",
        "Filter gadgets from modules without SafeSEH and with static addresses",
        "Use randomly chosen addresses until one works",
        "Avoid gadgets entirely and hope execution reaches shellcode"
      ],
      "correct_answer": 1,
      "explanation": "Filtering gadgets by SafeSEH and module reliability ensures the handler executes predictably.",
      "difficulty": 4,
      "memory_aid": "Map each phase to a go-to tool and a backup.",
      "points": 10
    }
  ],
  "mastery_threshold": 80,
  "jim_kwik_principles": [
    "active_learning",
    "minimum_effective_dose",
    "teach_like_im_10",
    "memory_hooks",
    "meta_learning",
    "connect_to_what_i_know",
    "reframe_limiting_beliefs",
    "gamify_it",
    "learning_sprint",
    "multiple_memory_pathways"
  ],
  "base_xp_reward": 170,
  "badge_unlock": null,
  "is_core_concept": false,
  "created_at": "2025-10-28T17:55:44",
  "updated_at": "2025-10-28T17:55:44",
  "author": "CyberLearn Offensive Curriculum Team",
  "version": "1.0"
}