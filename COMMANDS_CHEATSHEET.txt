# CyberLearn Command Cheatsheet

## Complete Setup (Recommended First-Time)
bash setup_rich_content.sh          # Linux/Mac
setup_rich_content.bat               # Windows

## Content Generation

### Create Single Lesson (Interactive)
python create_rich_lesson.py --interactive

### Create Single Lesson (Command Line)
python create_rich_lesson.py -t "Lesson Title" -d domain --difficulty 2 -c "Concept1,Concept2,Concept3"

### Generate 10 Priority Lessons
python create_rich_lesson.py --batch generate_all_rich_lessons.json

### Generate All Basic Lessons (24 total)
python generate_lessons.py

### Generate All Advanced Lessons (22 total)
python generate_advanced_lessons.py

## AI Enhancement

### List Lessons Needing Content
python enhance_with_ai.py --list

### Enhance Single Lesson
python enhance_with_ai.py content/lesson_FILE.json

### Generate All Prompts (Batch)
python enhance_with_ai.py --batch 'content/lesson_*.json'

## Database Operations

### Load All Lessons
python load_all_lessons.py

### Check Database
python check_database.py

### Reset User
python check_database.py reset USERNAME

### Fix Database and Reload Everything
python fix_and_reload.py

## Application

### Launch App
streamlit run app.py

### Launch with Custom Port
streamlit run app.py --server.port 8080

## Git Operations

### Push Everything
git add .
git commit -m "Your message"
git push origin main

### Push Only New Content
git add content/*_RICH.json create_rich_lesson.py enhance_with_ai.py
git commit -m "Add rich content system"
git push origin main

## Quick Workflows

### Workflow 1: Test Rich Content (Fastest)
python load_all_lessons.py
python check_database.py reset yourusername
streamlit run app.py

### Workflow 2: Create New Lesson with AI
python create_rich_lesson.py -t "Topic" -d domain --difficulty 2 -c "Concepts"
# Open generated _PROMPT.txt
# Copy to Claude/ChatGPT
# Copy AI output to JSON
python load_all_lessons.py
streamlit run app.py

### Workflow 3: Generate All Lessons
python generate_lessons.py && python generate_advanced_lessons.py
python load_all_lessons.py
streamlit run app.py

## File Locations

### Content
content/lesson_*.json                     # Lesson files
content/lesson_*_RICH.json               # Hand-crafted rich lessons
content/lesson_*_PROMPT.txt              # AI generation prompts

### Tools
create_rich_lesson.py                     # Content generator
enhance_with_ai.py                        # AI helper
generate_lessons.py                       # Basic lesson generator
generate_advanced_lessons.py              # Advanced lesson generator
load_all_lessons.py                       # Database loader
check_database.py                         # Database checker
fix_and_reload.py                         # Fix and reload automation
setup_rich_content.sh/.bat               # Complete setup

### Documentation
README_CONTENT_SYSTEM.md                 # Complete content system guide
CONTENT_GENERATOR_GUIDE.md               # Full documentation
QUICK_START_CONTENT_GENERATOR.txt        # Quick reference
FINAL_SUMMARY.md                          # Project summary
COMMANDS_CHEATSHEET.txt                   # This file

### Config
generate_all_rich_lessons.json           # Batch generation config
cyberlearn.db                             # Database (generated)

## Common Commands by Task

### I Want to Create a New Lesson
python create_rich_lesson.py --interactive

### I Want to Enhance Existing Lessons
python enhance_with_ai.py --list
python enhance_with_ai.py content/LESSON.json

### I Want to Test the App
python load_all_lessons.py
streamlit run app.py

### I Want to Reset Everything
rm cyberlearn.db                          # Delete database
python fix_and_reload.py                  # Rebuild everything

### I Want to See What's in the Database
python check_database.py

### I Want to Add a User
streamlit run app.py
# Use the UI to create account

### I Want to Push to GitHub
git add .
git commit -m "Update content"
git push origin main

## Troubleshooting Commands

### JSON Validation Error
python -m json.tool content/lesson_FILE.json

### Lesson Not Loading
python load_all_lessons.py
python check_database.py

### User Can't See Lessons
python check_database.py reset USERNAME

### Database Corrupted
rm cyberlearn.db
python fix_and_reload.py

### Import Errors
pip install -r requirements.txt

## Pro Tips

### Generate and Load in One Line
python create_rich_lesson.py -t "Topic" -d domain --difficulty 2 -c "A,B,C" && python load_all_lessons.py

### View Latest Lessons
ls -lt content/lesson_*.json | head -5      # Linux/Mac
dir /O-D content\lesson_*.json | more       # Windows

### Count Lessons by Domain
ls content/lesson_red_team_*.json | wc -l   # Linux/Mac
dir content\lesson_red_team_*.json | find /c ".json"  # Windows

### Find Lessons Needing Content
grep -l "CONTENT TO BE GENERATED" content/*.json    # Linux/Mac
findstr /M "CONTENT TO BE GENERATED" content\*.json # Windows

### Backup Database Before Changes
cp cyberlearn.db cyberlearn.db.backup               # Linux/Mac
copy cyberlearn.db cyberlearn.db.backup             # Windows

## Keyboard Shortcuts in Streamlit

Ctrl+C                  # Stop Streamlit server
Ctrl+Shift+R            # Rerun app (in browser)
?                       # Show keyboard shortcuts (in app)

## Environment Variables

STREAMLIT_SERVER_PORT   # Change default port
STREAMLIT_THEME_BASE    # Change theme (light/dark)

## Example: Complete New Lesson Workflow

# 1. Create template
python create_rich_lesson.py -t "XSS Attacks" -d pentest --difficulty 2 -c "Reflected,Stored,DOM,Prevention"

# 2. Find the _PROMPT.txt
ls content/lesson_pentest_*XSS*_PROMPT.txt

# 3. Get AI enhancement prompts
python enhance_with_ai.py content/lesson_pentest_06_xss_attacks.json

# 4. Copy prompts to Claude/ChatGPT
# 5. Copy AI output to JSON file
# 6. Load and test
python load_all_lessons.py
streamlit run app.py

---

Save this file for quick reference!
