# Rich Content Generator - Quick Start

## 3 Ways to Create Lessons

### 1. INTERACTIVE (Easiest)
```bash
python create_rich_lesson.py --interactive
```
Answer questions â†’ Get structured template â†’ Fill in content

### 2. COMMAND LINE (Fast)
```bash
python create_rich_lesson.py \\
  -t "Your Lesson Title" \\
  -d domain_name \\
  --difficulty 2 \\
  -c "Concept1,Concept2,Concept3"
```

### 3. BATCH (Multiple at once)
```bash
python create_rich_lesson.py --batch generate_all_rich_lessons.json
```
Generates 10 lessons instantly

## Quick Workflow

```
1. Generate Template
   python create_rich_lesson.py -i

2. Open Generated File
   content/lesson_domain_XX_title.json

3. Find [CONTENT TO BE GENERATED] Markers
   Replace with real content (1500-3000 words)

4. Use the _PROMPT.txt File
   Copy into Claude/ChatGPT for AI-generated content

5. Load into Database
   python load_all_lessons.py

6. Test
   streamlit run app.py
```

## What You Get

âœ… Properly structured JSON (Pydantic-validated)
âœ… Content blocks for each section
âœ… Quiz question templates
âœ… Memory aid placeholders
âœ… AI content generation prompts
âœ… Real-world connection prompts

## Content Requirements

- **Minimum words**: 1500-3000 (based on difficulty)
- **Real analogies**: Not "like X in everyday life"
- **Specific examples**: Real tools, commands, case studies
- **Memory techniques**: Mnemonics, acronyms, visual aids
- **Both perspectives**: Attack AND defense

## Example Output

```json
{
  "lesson_id": "uuid-here",
  "domain": "red_team",
  "title": "Your Lesson",
  "difficulty": 2,
  "content_blocks": [
    {
      "type": "mindset_coach",
      "title": "Why This Matters",
      "content": { "text": "..." }
    },
    {
      "type": "explanation",
      "title": "Main Concept",
      "content": {
        "text": "[CONTENT TO BE GENERATED - See _PROMPT.txt for guidelines]"
      }
    }
  ],
  "post_assessment": [...]
}
```

## Using with AI

1. Generate template
2. Find the `_PROMPT.txt` file
3. Copy entire prompt into Claude/ChatGPT
4. AI generates rich content (2500+ words)
5. Copy generated content into your JSON
6. Load into database

## Batch Generate All Lessons

```bash
# Generate 10 priority lessons
python create_rich_lesson.py --batch generate_all_rich_lessons.json

# Creates:
# - Blue Team Fundamentals
# - Penetration Testing Methodology
# - Malware Types
# - Incident Response
# - Kerberos Authentication
# - Group Policy
# - Encryption Fundamentals
# - Network Security
# - OSINT and Reconnaissance
# - Log Analysis
```

## Load into App

```bash
# After filling in content:
python load_all_lessons.py
python check_database.py reset yourusername
streamlit run app.py
```

## Files Created

```
content/
â”œâ”€â”€ lesson_domain_01_title.json          # Your lesson
â”œâ”€â”€ lesson_domain_01_title_PROMPT.txt    # AI generation guide
```

## Need Help?

Read: CONTENT_GENERATOR_GUIDE.md (full documentation)

## Push to GitHub

```bash
git add create_rich_lesson.py
git add generate_all_rich_lessons.json
git add CONTENT_GENERATOR_GUIDE.md
git add QUICK_START_CONTENT_GENERATOR.txt

git commit -m "Add rich content generator tool"
git push origin main
```

---

**You're ready to create professional lessons!** ðŸš€
